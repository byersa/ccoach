<?xml version="1.0" encoding="UTF-8"?>
<!--
This Work is in the public domain and is provided on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
You are solely responsible for determining the appropriateness of using
this Work and assume any risks associated with your use of this Work.

This Work includes contributions authored by David E. Jones, not as a
"work for hire", who hereby disclaims any copyright to the same.
-->
<screen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/xml-screen-1.1.xsd"
        default-menu-include="false" require-authentication="false">

    <transition name="login">
        <actions><script>
                 ec.user.loginUser(username, password, tenantId) 
                 if (!ec.message.getErrors()) {
                         userAccount = ec.user.getUserAccount()
                         ec.web.sendJsonResponse(["test": "good", "acct": userAccount])
                 } else {
                         ec.web.sendJsonResponse(["test": "error"])
                 }
        </script></actions>
        <default-response type="none"/>
    </transition>
    <transition name="logout">
        <actions><script>ec.user.logoutUser()</script></actions>
        <default-response url="/"/>
        <error-response url="."/>
    </transition>
    <transition name="resetPassword">
        <service-call name="org.moqui.impl.UserServices.reset#Password"/>
        <default-response url="."/>
    </transition>
    <transition name="changePassword">
        <service-call name="org.moqui.impl.UserServices.update#Password"/>
        <default-response url="../Login"/>
        <error-response url="."/>
    </transition>

    <widgets>
        <render-mode>
            <text type="html" location="component://ccoach/screen/includes/main1.html.ftl"/>
        </render-mode>
 	
        <render-mode>
            <text type="html"><![CDATA[
                <script  type="text/javascript">
                     require([
                     'cc/modules/Module', 
                     'cc/modules/main/WelcomeLogin',
                    'cc/modules/main/presenters/MainPresenter',
                    'cc/modules/main/presenters/WelcomePresenter',
                    'cc/modules/main/presenters/WelcomeLoginPresenter',
                    'dijit/form/Form',
                    'dijit/form/ValidationTextBox',
                    'cc/widgets/RoleDependedValidationTextBox',
                    'cc/widgets/RoleDependedCurrencyValidationTextBox',
                    'cc/widgets/RoleDependedValidationDateBox',
                    'cc/widgets/navigation/LinkButton',
                    'dojox/grid/EnhancedGrid'],
                    function(AsyncContext) {
                     require(['dojobiz/context/AsyncContext!cc/contexts/main/welcomeLoginContext.xml']);
                     });
                </script>
         ]]></text>
        </render-mode>
        
        <render-mode>
            <text type="html" location="component://ccoach/screen/includes/main2.html.ftl"/>
        </render-mode>
 	
        <render-mode>
            <text type="html" ><![CDATA[
            <div data-dojo-type="cc.modules.main.WelcomeLogin">
                <h1>Sign in</h1>
            
                <div class="innerContainer">
                    <div id="signInFormHolder">
                        <div id="signInMessBox"><!--.--></div>
                        <div id="sinInIELoader"><!-- . --></div>
                        <div id="signIn" class="signIn">
                            <form action="javascript://nop"
                                  data-context-wire="$userSignInForm->wiringFormProto">
                                <fieldset>
                                    <div class="formRow">
                                        <div class="inputBackgroud">
                                            <input data-context-query="#signInLoginTextBox"
                                                   data-dojo-props="tabIndex: 1"/>
                                        </div>
                                    </div>
                                    <div class="formRow">
            
            
                                        <div class="inputBackgroud">
                                            <input type="password"
                                                   data-context-query="#signInPasswordTextBox"
                                                   data-dojo-props="type:'password', tabIndex: 2"/>
                                            <br /><br />
                                            <div data-context-query="#forgotPasswordButton"
                                                 data-dojo-props="tabIndex: 4"></div>
                                        </div>
                                    </div>
                                    <div class="formRow">
                                        <div class="signInBtn">
                                            <div data-context-query="#performSignInBtn" data-dojo-props="tabIndex: 3">Sign In</div>
                                        </div>
                                    </div>
                                </fieldset>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            ]]></text>
        </render-mode>
        
        <render-mode>
            <text type="html"><![CDATA[</div></div></body></html>]]></text>
        </render-mode>
    </widgets>
</screen>
